# Generated by Django 2.0.5 on 2018-06-04 16:36

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('kpc', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EditRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aes', models.CharField(blank=True, help_text='AES Confirmation Number (ITN)', max_length=30, validators=[django.core.validators.RegexValidator(message='AES Confirmation (ITN) format is 14 digits prepended by X: X##############', regex='X\\d{14}')], verbose_name='AES')),
                ('country_of_origin', django_countries.fields.CountryField(blank=True, max_length=2, verbose_name='Country of Origin')),
                ('date_of_issue', models.DateField(blank=True, help_text='Date of Issue', null=True)),
                ('date_of_expiry', models.DateField(blank=True, null=True)),
                ('shipped_value', models.DecimalField(blank=True, decimal_places=2, help_text='Value in USD', max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00899999999999999931998839741709161899052560329437255859375'), message='Shipped value must be greater than 0')])),
                ('exporter', models.CharField(blank=True, max_length=256)),
                ('exporter_address', models.TextField(blank=True, help_text='Please include country name')),
                ('number_of_parcels', models.PositiveIntegerField(blank=True, null=True)),
                ('consignee', models.CharField(blank=True, max_length=256)),
                ('consignee_address', models.TextField(blank=True, help_text='Please include country name')),
                ('carat_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00899999999999999931998839741709161899052560329437255859375'), message='Carat weight must be at least 0.01')])),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Approved'), (2, 'Rejected')], default=0)),
                ('date_requested', models.DateTimeField(auto_now_add=True)),
                ('date_reviewed', models.DateTimeField(blank=True, null=True)),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='edit_requests', to='kpc.Certificate')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='edit_requests', to=settings.AUTH_USER_MODEL)),
                ('harmonized_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='kpc.HSCode')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reviewed_edit_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_requested'],
            },
        ),
        migrations.AddField(
            model_name='certificateconfig',
            name='edit_requests',
            field=models.BooleanField(default=False, help_text='If True, users will be able to submit a request to modify a prepared certificate.', verbose_name='Certificate Edit Requests'),
        ),
        migrations.AddField(
            model_name='certificateconfig',
            name='reviewer_emails',
            field=models.TextField(blank=True, help_text='Comma delimited list of email addresses to be notified upon submission of a request to edit a certificate.'),
        ),
        migrations.AddField(
            model_name='historicalcertificateconfig',
            name='edit_requests',
            field=models.BooleanField(default=False, help_text='If True, users will be able to submit a request to modify a prepared certificate.', verbose_name='Certificate Edit Requests'),
        ),
        migrations.AddField(
            model_name='historicalcertificateconfig',
            name='reviewer_emails',
            field=models.TextField(blank=True, help_text='Comma delimited list of email addresses to be notified upon submission of a request to edit a certificate.'),
        ),
    ]
