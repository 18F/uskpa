# Generated by Django 2.0.5 on 2018-05-29 10:12

from decimal import Decimal
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import localflavor.us.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='USKPA Certificate ID number', unique=True)),
                ('aes', models.CharField(blank=True, help_text='AES Confirmation Number (ITN)', max_length=30, validators=[django.core.validators.RegexValidator(message='AES Confirmation (ITN) format is 14 digits prepended by X: X##############', regex='X\\d{14}')], verbose_name='AES')),
                ('country_of_origin', django_countries.fields.CountryField(blank=True, max_length=2, verbose_name='Country of Origin')),
                ('date_of_issue', models.DateField(blank=True, help_text='Date of Issue', null=True)),
                ('date_of_expiry', models.DateField(blank=True, null=True)),
                ('shipped_value', models.DecimalField(blank=True, decimal_places=2, help_text='Value in USD', max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00899999999999999931998839741709161899052560329437255859375'), message='Shipped value must be greater than 0')])),
                ('exporter', models.CharField(blank=True, max_length=256)),
                ('exporter_address', models.TextField(blank=True, help_text='Please include country name')),
                ('number_of_parcels', models.PositiveIntegerField(blank=True, null=True)),
                ('consignee', models.CharField(blank=True, max_length=256)),
                ('consignee_address', models.TextField(blank=True, help_text='Please include country name')),
                ('carat_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00899999999999999931998839741709161899052560329437255859375'), message='Carat weight must be at least 0.01')])),
                ('status', models.IntegerField(choices=[(0, 'Available'), (1, 'Prepared'), (2, 'Shipped'), (3, 'Delivered'), (4, 'Void')], default=0)),
                ('last_modified', models.DateTimeField(blank=True, editable=False)),
                ('date_of_sale', models.DateField(blank=True, help_text='Date of sale to licensee', null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('check', 'Check')], max_length=5)),
                ('void', models.BooleanField(default=False, help_text='Certificate has been voided?')),
                ('notes', models.TextField(blank=True)),
                ('attested', models.BooleanField(default=False, help_text='I have completed the necessary\n                                                                application pertaining to this shipment,\n                                                                including the warranty that the diamonds\n                                                                being shipped were not traded to fund conflict.')),
                ('date_of_shipment', models.DateField(blank=True, help_text='Date certificate was marked SHIPPED', null=True)),
                ('date_of_delivery', models.DateField(blank=True, help_text='Date certificate was marked DELIVERED', null=True)),
                ('date_voided', models.DateField(blank=True, help_text='Date on which this certificate was voided', null=True)),
                ('assignor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': ('number',),
            },
        ),
        migrations.CreateModel(
            name='CertificateConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_to_expiry', models.PositiveIntegerField(default=60)),
                ('price', models.DecimalField(decimal_places=2, default=20.0, max_digits=10)),
                ('kp_countries', django_countries.fields.CountryField(blank=True, help_text='Countries available for selection as Country of Origin', max_length=749, multiple=True, verbose_name='KP Countries')),
            ],
            options={
                'verbose_name': 'Certificate Configuration',
                'verbose_name_plural': 'Certificate Configuration',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCertificate',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.PositiveIntegerField(db_index=True, help_text='USKPA Certificate ID number')),
                ('aes', models.CharField(blank=True, help_text='AES Confirmation Number (ITN)', max_length=30, validators=[django.core.validators.RegexValidator(message='AES Confirmation (ITN) format is 14 digits prepended by X: X##############', regex='X\\d{14}')], verbose_name='AES')),
                ('country_of_origin', django_countries.fields.CountryField(blank=True, max_length=2, verbose_name='Country of Origin')),
                ('date_of_issue', models.DateField(blank=True, help_text='Date of Issue', null=True)),
                ('date_of_expiry', models.DateField(blank=True, null=True)),
                ('shipped_value', models.DecimalField(blank=True, decimal_places=2, help_text='Value in USD', max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00899999999999999931998839741709161899052560329437255859375'), message='Shipped value must be greater than 0')])),
                ('exporter', models.CharField(blank=True, max_length=256)),
                ('exporter_address', models.TextField(blank=True, help_text='Please include country name')),
                ('number_of_parcels', models.PositiveIntegerField(blank=True, null=True)),
                ('consignee', models.CharField(blank=True, max_length=256)),
                ('consignee_address', models.TextField(blank=True, help_text='Please include country name')),
                ('carat_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00899999999999999931998839741709161899052560329437255859375'), message='Carat weight must be at least 0.01')])),
                ('status', models.IntegerField(choices=[(0, 'Available'), (1, 'Prepared'), (2, 'Shipped'), (3, 'Delivered'), (4, 'Void')], default=0)),
                ('last_modified', models.DateTimeField(blank=True, editable=False)),
                ('date_of_sale', models.DateField(blank=True, help_text='Date of sale to licensee', null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('check', 'Check')], max_length=5)),
                ('void', models.BooleanField(default=False, help_text='Certificate has been voided?')),
                ('notes', models.TextField(blank=True)),
                ('attested', models.BooleanField(default=False, help_text='I have completed the necessary\n                                                                application pertaining to this shipment,\n                                                                including the warranty that the diamonds\n                                                                being shipped were not traded to fund conflict.')),
                ('date_of_shipment', models.DateField(blank=True, help_text='Date certificate was marked SHIPPED', null=True)),
                ('date_of_delivery', models.DateField(blank=True, help_text='Date certificate was marked DELIVERED', null=True)),
                ('date_voided', models.DateField(blank=True, help_text='Date on which this certificate was voided', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assignor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical certificate',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCertificateConfig',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('days_to_expiry', models.PositiveIntegerField(default=60)),
                ('price', models.DecimalField(decimal_places=2, default=20.0, max_digits=10)),
                ('kp_countries', django_countries.fields.CountryField(blank=True, help_text='Countries available for selection as Country of Origin', max_length=749, multiple=True, verbose_name='KP Countries')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Certificate Configuration',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalHSCode',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('value', models.CharField(max_length=12)),
                ('sort_order', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Harmonized System Code',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLicensee',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('address', models.CharField(max_length=1024)),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address continued')),
                ('city', models.CharField(max_length=1024)),
                ('state', localflavor.us.models.USStateField(max_length=2)),
                ('zip_code', localflavor.us.models.USZipCodeField(max_length=10)),
                ('tax_id', models.CharField(help_text='Tax Identification Number', max_length=10, validators=[django.core.validators.RegexValidator(message='TIN format: ##-#######', regex='\\d{2}-\\d{7}')])),
                ('is_active', models.BooleanField(default=True, help_text='Licensee is active - able to request and access certificates')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical licensee',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPortOfExport',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Port of Export',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReceipt',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.IntegerField(db_index=True, default=1300)),
                ('licensee_name', models.CharField(max_length=256)),
                ('licensee_address', models.TextField()),
                ('certificates', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=32), size=None)),
                ('total_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('certificates_sold', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=256)),
                ('contact', models.CharField(max_length=256)),
                ('date_sold', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical receipt',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalVoidReason',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('value', models.CharField(max_length=500)),
                ('sort_order', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical void reason',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HSCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=12)),
                ('sort_order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Harmonized System Code',
                'ordering': ['sort_order', 'value'],
            },
        ),
        migrations.CreateModel(
            name='KpcAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('address', models.TextField()),
                ('country', django_countries.fields.CountryField(max_length=2)),
            ],
            options={
                'ordering': ['licensee', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Licensee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('address', models.CharField(max_length=1024)),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address continued')),
                ('city', models.CharField(max_length=1024)),
                ('state', localflavor.us.models.USStateField(max_length=2)),
                ('zip_code', localflavor.us.models.USZipCodeField(max_length=10)),
                ('tax_id', models.CharField(help_text='Tax Identification Number', max_length=10, validators=[django.core.validators.RegexValidator(message='TIN format: ##-#######', regex='\\d{2}-\\d{7}')])),
                ('is_active', models.BooleanField(default=True, help_text='Licensee is active - able to request and access certificates')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PortOfExport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Port of Export',
                'verbose_name_plural': 'Ports of Export',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1300, unique=True)),
                ('licensee_name', models.CharField(max_length=256)),
                ('licensee_address', models.TextField()),
                ('certificates', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=32), size=None)),
                ('total_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('certificates_sold', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=256)),
                ('contact', models.CharField(max_length=256)),
                ('date_sold', models.DateField()),
            ],
            options={
                'ordering': ['-number'],
            },
        ),
        migrations.CreateModel(
            name='VoidReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=500)),
                ('sort_order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['sort_order', 'value'],
            },
        ),
        migrations.AddField(
            model_name='kpcaddress',
            name='licensee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='addresses', to='kpc.Licensee'),
        ),
        migrations.AddField(
            model_name='historicalcertificate',
            name='harmonized_code',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='kpc.HSCode'),
        ),
        migrations.AddField(
            model_name='historicalcertificate',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcertificate',
            name='licensee',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='kpc.Licensee'),
        ),
        migrations.AddField(
            model_name='historicalcertificate',
            name='port_of_export',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='kpc.PortOfExport'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='harmonized_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='kpc.HSCode'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='licensee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='kpc.Licensee'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='port_of_export',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='kpc.PortOfExport'),
        ),
        migrations.AlterUniqueTogether(
            name='kpcaddress',
            unique_together={('licensee', 'name')},
        ),
    ]
